import { Command, Ctx, Help, Start, Update, Action } from 'nestjs-telegraf';
import { UpdateType as TelegrafUpdateType } from 'telegraf/typings/telegram-types';
import { IContext } from '@/interfaces/context.interface';
import { UpdateType } from '@/common/decorators/update-type.decorator';

@Update()
export class GreeterUpdate {
     
     @Start()
     async onStart(@Ctx() ctx: IContext) {
          await ctx.replyWithHTML(`
               üëã –ü—Ä–∏–≤–µ—Ç - <b>${ctx.from.first_name}</b>! –Ø –±–æ—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç –∫–æ–Ω–≤–µ—Ä—Ç–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç –≤ —Ä–µ—á—å —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –ø—Ä–æ–¥–≤–∏–Ω—É—Ç–æ–π AI –º–æ–¥–µ–ª–∏. –í–≤–µ–¥–∏ —Ç–µ–∫—Å—Ç, –∏ —è –æ–∑–≤—É—á—É –µ–≥–æ –¥–ª—è —Ç–µ–±—è.
          `, {
               reply_markup: {
                    inline_keyboard: [
                         [{ text: '–ü–æ–ª—É—á–∏—Ç—å –≤—Å–µ –≥–æ–ª–æ—Å–∞', callback_data: '/voices' }],
                         [{ text: '–£–±—Ä–∞—Ç—å —à—É—Å —Å –≤–∏–¥–µ–æ', callback_data: '/video' }],
                    ],
               },
          });
     };

     @Help()
     async onHelp(@Ctx() ctx: IContext) {
          await ctx.replyWithHTML(`‚ÅâÔ∏è<b> –ï—Å–ª–∏ —É —Ç–µ–±—è –µ—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã.</b> \n‚úâÔ∏è <b>–ù–∞–ø–∏—à–∏—Ç–µ –º–Ω–µ</b> <a href='https://t.me/d16ddd348'>@d16ddd348</a><b>.</b>`);
     };
     
     @Action('/voices')
     @Command('voices')
     async onSceneCommand(@Ctx() ctx: IContext): Promise<void> {
          await ctx.scene.enter('VOICE_SCENE_ID');
     };

     @Action('/video')
     @Command('video')
     async onVideoCommand(@Ctx() ctx: IContext): Promise<void> {
          await ctx.scene.enter('VIDEO_SCENE_ID');
     };
     
     // @Command('wizard')
     // async onWizardCommand(@Ctx() ctx: IContext): Promise<void> {
     //      await ctx.scene.enter('WIZARD_SCENE_ID');
     // };
};